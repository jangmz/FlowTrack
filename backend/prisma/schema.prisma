// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id              Int       @id @default(autoincrement())
  deviceType      String
  model           String
  serialNumber    String?
  inventoryNumber Int       @unique
  status          String
  clientId        Int?
  history         History[]
  client          Client?   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Client {
  id       Int       @id @default(autoincrement())
  fullName String
  email    String    @unique
  deviceId Int?
  history  History[]
  Device   Device[]
}

model User {
  id       Int    @id @default(autoincrement())
  fullName String
  role     Role   @default(user)
  username String @unique
  password String
  email    String @unique
}

model History {
  id         Int       @id @default(autoincrement())
  deviceId   Int
  clientId   Int
  rentDate   DateTime
  returnDate DateTime?
  device     Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  client     Client    @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model refreshToken {
  id    Int    @id @default(autoincrement())
  token String @unique
}

enum Role {
  admin
  user
}
